@startuml
abstract class Metadata {
    + <<virtual>> isEditable : bool <<get>> <<set>> = true
    + RecordUndo() : void
    + RecordUndo(name:string) : void
    + InferOwnerFromParent() : void
    + isLinked : bool <<get>>
    + Unlink() : void
    + UnlinkChildren() : void
    + EnsureLinked() : void
    + path : string <<get>>
    + Ancestor(predicate:Func<Metadata, bool>, includeSelf:bool) : Metadata
    + Ancestor(includeSelf:bool) : T
    + Descendants(predicate:Func<Metadata, bool>) : IEnumerable<Metadata>
    + Descendants() : IEnumerable<T>
    + <<override>> GetHashCode() : int
    + <<override>> Equals(obj:object) : bool
    + <<override>> ToString() : string
    + instantiate : bool <<get>> <<set>>
    + value : object <<get>> <<set>>
    + isPrefabInstance : bool <<get>>
    + isPrefabInstanceWithDefinition : bool <<get>>
    + isPrefabInstanceWithoutDefinition : bool <<get>>
    + isPrefabRoot : bool <<get>>
    + isPrefabDiff : bool <<get>>
    + isRevertibleToPrefab : bool <<get>>
    + RevertToPrefab() : void
    + MatchWithPrefab() : void
    + {abstract} GetCustomAttributes(inherit:bool) : Attribute[]
    + AncestorHasAttribute(attributeType:Type, inherit:bool) : bool
    + GetAncestorAttribute(attributeType:Type, inherit:bool) : Attribute
    + GetAncestorAttributes(attributeType:Type, inherit:bool) : IEnumerable<Attribute>
    + AncestorHasAttribute(inherit:bool) : bool
    + GetAncestorAttribute(inherit:bool) : TAttribute
    + GetAncestorAttributes(inherit:bool) : IEnumerable<TAttribute>
    + GetEnumerator() : IEnumerator
    + Count : int <<get>>
    + IsFixedSize : bool <<get>>
    + IsReadOnly : bool <<get>>
    + IsSynchronized : bool <<get>>
    + SyncRoot : object <<get>>
    + Contains(value:object) : bool
    + Remove(value:object) : void
    + Clear() : void
    + isEnumerable : bool <<get>>
    + isList : bool <<get>>
    + Add(value:object) : int
    + Insert(index:int, value:object) : void
    + IndexOf(value:object) : int
    + RemoveAt(index:int) : void
    + CopyTo(array:Array, index:int) : void
    + Move(sourceIndex:int, destinationIndex:int) : void
    + Duplicate(index:int) : void
    + isDictionary : bool <<get>>
    + isOrderedDictionary : bool <<get>>
    + Add(key:object, value:object) : void
    + KeyMetadata(index:int) : Metadata
    + ValueMetadata(index:int) : Metadata
    + {static} Root() : Metadata
    + StaticObject(@object:object, definedType:Type) : ObjectMetadata
    + StaticObject(@object:object) : ObjectMetadata
    + Object(name:string, @object:object, definedType:Type) : ObjectMetadata
    + Object(name:string, @object:object) : ObjectMetadata
    + Member(name:string, bindingFlags:BindingFlags) : MemberMetadata
    + Index(index:int) : IndexMetadata
    + Indexer(indexer:object) : IndexerMetadata
    + Cast(type:Type) : CastMetadata
    + Cast() : CastMetadata
    + DictionaryKeyAt(index:int) : DictionaryKeyAtIndexMetadata
    + DictionaryValueAt(index:int) : DictionaryValueAtIndexMetadata
    + Proxy(subpath:object, binding:Metadata) : ProxyMetadata
    + EditorPref(configuration:PluginConfiguration, member:MemberInfo) : EditorPrefMetadata
    + ProjectSetting(configuration:PluginConfiguration, member:MemberInfo) : ProjectSettingMetadata
    + AutoDig(path:string) : Metadata
    + {static} FromProperty(property:SerializedProperty) : Metadata
}
class Children {
    + <<new>> TryGetValue(key:int, value:Metadata) : bool
}
class "Func`1"<T> {
}
class "Action`1"<T> {
}
abstract class "NoAllocDelegate`1"<T> {
}
abstract class "NoAllocDig`1"<T> {
}
class DigMember {
    + DigMember()
    + Get(name:string, bindingFlags:BindingFlags) : Func<Metadata, MemberMetadata>
}
class DigIndex {
    + DigIndex()
    + Get(index:int) : Func<Metadata, IndexMetadata>
}
class DigIndexer {
    + DigIndexer()
    + Get(indexer:object) : Func<Metadata, IndexerMetadata>
}
class DigCast {
    + DigCast()
    + Get(type:Type) : Func<Metadata, CastMetadata>
}
class DigStaticObject {
    + DigStaticObject()
    + Get(@object:object, definedType:Type) : Func<Metadata, ObjectMetadata>
}
class "KeyedCollection`2"<T1,T2> {
}
class "IKeyedCollection`2"<T1,T2> {
}
IAttributeProvider <|-- Metadata
IList <|-- Metadata
IDictionary <|-- Metadata
Metadata --> "label" GUIContent
Metadata --> "children" Children
Metadata --> "parent" Metadata
Metadata --> "root" Metadata
Metadata --> "definedType" Type
Metadata --> "instantiator<object>" "Func`1"
Metadata --> "nullableValueType" Type
Metadata --> "valueType" Type
Metadata --> "prefabDefinition" Metadata
Metadata --> "enumerableType" Type
Metadata --> "enumerableElementType" Type
Metadata --> "listType" Type
Metadata --> "listElementType" Type
Metadata --> "dictionaryType" Type
Metadata --> "dictionaryKeyType" Type
Metadata --> "dictionaryValueType" Type
Metadata --> "Keys" ICollection
Metadata --> "Values" ICollection
Metadata +-- Children
"KeyedCollection`2" "<int,Metadata>" <|-- Children
"IKeyedCollection`2" "<int,Metadata>" <|-- Children
Metadata +-- "NoAllocDelegate`1"
Metadata +-- "NoAllocDig`1"
"NoAllocDelegate`1" "<Func<Metadata, T>>" <|-- "NoAllocDig`1"
Metadata +-- DigMember
"NoAllocDig`1" "<MemberMetadata>" <|-- DigMember
Metadata +-- DigIndex
"NoAllocDig`1" "<IndexMetadata>" <|-- DigIndex
Metadata +-- DigIndexer
"NoAllocDig`1" "<IndexerMetadata>" <|-- DigIndexer
Metadata +-- DigCast
"NoAllocDig`1" "<CastMetadata>" <|-- DigCast
Metadata +-- DigStaticObject
"NoAllocDig`1" "<ObjectMetadata>" <|-- DigStaticObject
@enduml
