@startuml
class "NonNullableList`1"<T> {
    + NonNullableList()
    + NonNullableList(capacity:int)
    + NonNullableList(collection:IEnumerable<T>)
    + Count : int <<get>>
    + IsSynchronized : bool <<get>>
    + SyncRoot : object <<get>>
    + IsReadOnly : bool <<get>>
    + IsFixedSize : bool <<get>>
    + CopyTo(array:Array, index:int) : void
    + Add(item:T) : void
    + Add(value:object) : int
    + Clear() : void
    + Contains(value:object) : bool
    + IndexOf(value:object) : int
    + Insert(index:int, value:object) : void
    + Remove(value:object) : void
    + Contains(item:T) : bool
    + CopyTo(array:T[], arrayIndex:int) : void
    + GetEnumerator() : IEnumerator<T>
    + IndexOf(item:T) : int
    + Insert(index:int, item:T) : void
    + Remove(item:T) : bool
    + RemoveAt(index:int) : void
    + AddRange(collection:IEnumerable<T>) : void
}
class "IList`1"<T> {
}
"IList`1" "<T>" <|-- "NonNullableList`1"
IList <|-- "NonNullableList`1"
@enduml
