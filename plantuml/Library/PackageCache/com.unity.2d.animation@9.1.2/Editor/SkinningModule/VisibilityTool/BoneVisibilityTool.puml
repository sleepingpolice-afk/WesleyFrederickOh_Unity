@startuml
class BoneVisibilityTool {
    + name : string <<get>>
    + isAvailable : bool <<get>>
    + BoneVisibilityTool(s:SkinningCache)
    + Setup() : void
    + Dispose() : void
    + Activate() : void
    + Deactivate() : void
    + SetAvailabilityChangeCallback(callback:Action) : void
}
class BoneVisibilityToolView {
    + BoneVisibilityToolView()
    + OnSelectionChange(skeleton:SkeletonCache) : void
    + OnBoneSelectionChange(bones:SkeletonSelection) : void
    + OnBoneExpandedChange(bones:BoneCache[]) : void
    + OnBoneNameChanged(bone:BoneCache) : void
    + Deactivate() : void
}
class BoneTreeView {
    + BoneTreeView(treeViewState:TreeViewState, columnHeader:MultiColumnHeader)
    + SetupHierarchy() : void
    + OnBoneSelectionChanged(boneSelection:SkeletonSelection) : void
    + OnBoneExpandedChanged(bones:BoneCache[]) : void
    + OnBoneNameChanged(bone:BoneCache) : void
}
class "Func`1"<T> {
}
BoneTreeWidgetModel <|-- BoneVisibilityTool
IVisibilityTool <|-- BoneVisibilityTool
VisibilityToolViewBase <|-- BoneVisibilityToolView
IBoneVisibilityToolView <|-- BoneVisibilityToolView
BoneVisibilityToolView o-> "GetController<BoneTreeWidgetController>" "Func`1"
BoneVisibilityToolView o-> "GetModel<IBoneTreeViewModel>" "Func`1"
VisibilityTreeViewBase <|-- BoneTreeView
BoneTreeView o-> "GetController<BoneTreeWidgetController>" "Func`1"
@enduml
