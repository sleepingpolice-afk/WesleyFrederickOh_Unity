@startuml
class SkinningObject {
}
class SkinningCache {
    + brushSize : float <<get>> <<set>>
    + brushHardness : float <<get>> <<set>>
    + brushStep : float <<get>> <<set>>
    + visibilityToolIndex : int <<get>> <<set>>
    + GetSprites() : SpriteCache[]
    + hasCharacter : bool <<get>>
    + bonesReadOnly : bool <<get>>
    + applyingChanges : bool <<get>> <<set>>
    + Create(spriteEditor:ISpriteEditorDataProvider, state:ISkinningCachePersistentState) : void
    + CreateToolCache(spriteEditor:ISpriteEditor, layoutOverlay:LayoutOverlay) : void
    + RestoreFromPersistentState() : void
    + RestoreToolStateFromPersistentState() : void
    + GetSprite(id:string) : SpriteCache
    + <<virtual>> GetMesh(sprite:SpriteCache) : MeshCache
    + <<virtual>> GetMeshPreview(sprite:SpriteCache) : MeshPreviewCache
    + GetSkeleton(sprite:SpriteCache) : SkeletonCache
    + <<virtual>> GetCharacterPart(sprite:SpriteCache) : CharacterPartCache
    + GetEffectiveSkeleton(sprite:SpriteCache) : SkeletonCache
    + GetTool(tool:Tools) : BaseTool
    + <<override>> BeginUndoOperation(operationName:string) : void
    + UndoScope(operationName:string, incrementGroup:bool) : UndoScope
    + DisableUndoScope() : DisableUndoScope
    + CreateTool() : T
    + CreateSpriteSheetSkeletons() : void
    + SyncSpriteSheetSkeletons() : void
    + CreateSpriteSheetSkeleton(characterPart:CharacterPartCache) : void
    + RestoreBindPose() : void
    + UndoRedoPerformed() : void
    + CreateBoneCacheFromSpriteBones(spriteBones:UnityEngine.U2D.SpriteBone[], scale:float) : BoneCache[]
    + IsOnVisualElement() : bool
}
class SpriteMap {
}
class MeshMap {
}
class SkeletonMap {
}
class ToolMap {
}
class MeshPreviewMap {
}
class CharacterPartMap {
}
class "SerializableDictionary`2"<T1,T2> {
}
CacheObject <|-- SkinningObject
SkinningObject --> "skinningCache" SkinningCache
Cache <|-- SkinningCache
SkinningCache --> "selectedTool" BaseTool
SkinningCache --> "mode" SkinningMode
SkinningCache --> "selectedSprite" SpriteCache
SkinningCache --> "skeletonSelection" SkeletonSelection
SkinningCache --> "vertexSelection" IndexedSelection
SkinningCache --> "events" SkinningEvents
SkinningCache --> "selectionTool" SelectionTool
SkinningCache --> "character" CharacterCache
SkinningCache +-- SpriteMap
"SerializableDictionary`2" "<string,SpriteCache>" <|-- SpriteMap
SkinningCache +-- MeshMap
"SerializableDictionary`2" "<SpriteCache,MeshCache>" <|-- MeshMap
SkinningCache +-- SkeletonMap
"SerializableDictionary`2" "<SpriteCache,SkeletonCache>" <|-- SkeletonMap
SkinningCache +-- ToolMap
"SerializableDictionary`2" "<Tools,BaseTool>" <|-- ToolMap
SkinningCache +-- MeshPreviewMap
"SerializableDictionary`2" "<SpriteCache,MeshPreviewCache>" <|-- MeshPreviewMap
SkinningCache +-- CharacterPartMap
"SerializableDictionary`2" "<SpriteCache,CharacterPartCache>" <|-- CharacterPartMap
@enduml
