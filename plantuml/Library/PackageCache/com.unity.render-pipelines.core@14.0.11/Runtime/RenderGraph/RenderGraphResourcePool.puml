@startuml
abstract class IRenderGraphResourcePool {
    + {abstract} PurgeUnusedResources(currentFrameIndex:int) : void
    + {abstract} Cleanup() : void
    + {abstract} CheckFrameAllocation(onException:bool, frameIndex:int) : void
    + {abstract} LogResources(logger:RenderGraphLogger) : void
}
abstract class "RenderGraphResourcePool`1"<Type> {
    + ReleaseResource(hash:int, resource:Type, currentFrameIndex:int) : void
    + TryGetResource(hashCode:int, resource:Type) : bool
    + <<override>> Cleanup() : void
    + RegisterFrameAllocation(hash:int, value:Type) : void
    + UnregisterFrameAllocation(hash:int, value:Type) : void
    + <<override>> CheckFrameAllocation(onException:bool, frameIndex:int) : void
    + <<override>> LogResources(logger:RenderGraphLogger) : void
}
struct ResourceLogInfo {
    + name : string
    + size : long
}
IRenderGraphResourcePool <|-- "RenderGraphResourcePool`1"
"RenderGraphResourcePool`1" +-- ResourceLogInfo
@enduml
