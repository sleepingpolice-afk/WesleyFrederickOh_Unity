@startuml
struct float4x4 {
    + float4x4(c0:float4, c1:float4, c2:float4, c3:float4)
    + float4x4(m00:float, m01:float, m02:float, m03:float, m10:float, m11:float, m12:float, m13:float, m20:float, m21:float, m22:float, m23:float, m30:float, m31:float, m32:float, m33:float)
    + float4x4(v:float)
    + float4x4(v:bool)
    + float4x4(v:bool4x4)
    + float4x4(v:int)
    + float4x4(v:int4x4)
    + float4x4(v:uint)
    + float4x4(v:uint4x4)
    + float4x4(v:double)
    + float4x4(v:double4x4)
    + Equals(rhs:float4x4) : bool
    + <<override>> Equals(o:object) : bool
    + <<override>> GetHashCode() : int
    + <<override>> ToString() : string
    + ToString(format:string, formatProvider:IFormatProvider) : string
}
class math <<static>> <<partial>> {
    + {static} float4x4(c0:float4, c1:float4, c2:float4, c3:float4) : float4x4
    + {static} float4x4(m00:float, m01:float, m02:float, m03:float, m10:float, m11:float, m12:float, m13:float, m20:float, m21:float, m22:float, m23:float, m30:float, m31:float, m32:float, m33:float) : float4x4
    + {static} float4x4(v:float) : float4x4
    + {static} float4x4(v:bool) : float4x4
    + {static} float4x4(v:bool4x4) : float4x4
    + {static} float4x4(v:int) : float4x4
    + {static} float4x4(v:int4x4) : float4x4
    + {static} float4x4(v:uint) : float4x4
    + {static} float4x4(v:uint4x4) : float4x4
    + {static} float4x4(v:double) : float4x4
    + {static} float4x4(v:double4x4) : float4x4
    + {static} rotate(a:float4x4, b:float3) : float3
    + {static} transform(a:float4x4, b:float3) : float3
    + {static} transpose(v:float4x4) : float4x4
    + {static} inverse(m:float4x4) : float4x4
    + {static} fastinverse(m:float4x4) : float4x4
    + {static} determinant(m:float4x4) : float
    + {static} hash(v:float4x4) : uint
    + {static} hashwide(v:float4x4) : uint4
}
class "IEquatable`1"<T> {
}
IFormattable <|-- float4x4
float4x4 --> "c0" float4
float4x4 --> "c1" float4
float4x4 --> "c2" float4
float4x4 --> "c3" float4
float4x4 o-> "identity" float4x4
float4x4 --> "zero" float4x4
@enduml
