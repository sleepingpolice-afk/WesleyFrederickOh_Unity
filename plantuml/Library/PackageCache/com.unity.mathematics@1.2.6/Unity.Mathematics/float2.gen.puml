@startuml
struct float2 {
    + x : float
    + y : float
    + float2(x:float, y:float)
    + float2(xy:float2)
    + float2(v:float)
    + float2(v:bool)
    + float2(v:bool2)
    + float2(v:int)
    + float2(v:int2)
    + float2(v:uint)
    + float2(v:uint2)
    + float2(v:half)
    + float2(v:half2)
    + float2(v:double)
    + float2(v:double2)
    + Equals(rhs:float2) : bool
    + <<override>> Equals(o:object) : bool
    + <<override>> GetHashCode() : int
    + <<override>> ToString() : string
    + ToString(format:string, formatProvider:IFormatProvider) : string
}
class math <<static>> <<partial>> {
    + {static} float2(x:float, y:float) : float2
    + {static} float2(xy:float2) : float2
    + {static} float2(v:float) : float2
    + {static} float2(v:bool) : float2
    + {static} float2(v:bool2) : float2
    + {static} float2(v:int) : float2
    + {static} float2(v:int2) : float2
    + {static} float2(v:uint) : float2
    + {static} float2(v:uint2) : float2
    + {static} float2(v:half) : float2
    + {static} float2(v:half2) : float2
    + {static} float2(v:double) : float2
    + {static} float2(v:double2) : float2
    + {static} hash(v:float2) : uint
    + {static} hashwide(v:float2) : uint2
    + {static} shuffle(left:float2, right:float2, x:ShuffleComponent) : float
    + {static} shuffle(left:float2, right:float2, x:ShuffleComponent, y:ShuffleComponent) : float2
    + {static} shuffle(left:float2, right:float2, x:ShuffleComponent, y:ShuffleComponent, z:ShuffleComponent) : float3
    + {static} shuffle(left:float2, right:float2, x:ShuffleComponent, y:ShuffleComponent, z:ShuffleComponent, w:ShuffleComponent) : float4
}
class "IEquatable`1"<T> {
}
class DebuggerProxy <<sealed>> {
    + x : float
    + y : float
    + DebuggerProxy(v:float2)
}
IFormattable <|-- float2
float2 --> "zero" float2
float2 --> "xxxx" float4
float2 --> "xxxy" float4
float2 --> "xxyx" float4
float2 --> "xxyy" float4
float2 --> "xyxx" float4
float2 --> "xyxy" float4
float2 --> "xyyx" float4
float2 --> "xyyy" float4
float2 --> "yxxx" float4
float2 --> "yxxy" float4
float2 --> "yxyx" float4
float2 --> "yxyy" float4
float2 --> "yyxx" float4
float2 --> "yyxy" float4
float2 --> "yyyx" float4
float2 --> "yyyy" float4
float2 --> "xxx" float3
float2 --> "xxy" float3
float2 --> "xyx" float3
float2 --> "xyy" float3
float2 --> "yxx" float3
float2 --> "yxy" float3
float2 --> "yyx" float3
float2 --> "yyy" float3
float2 --> "xx" float2
float2 --> "xy" float2
float2 --> "yx" float2
float2 --> "yy" float2
float2 +-- DebuggerProxy
@enduml
