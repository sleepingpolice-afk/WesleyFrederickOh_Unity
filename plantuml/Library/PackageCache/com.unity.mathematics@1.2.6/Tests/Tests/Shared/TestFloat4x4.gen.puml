@startuml
class TestFloat4x4 {
    + {static} float4x4_zero() : void
    + {static} float4x4_identity() : void
    + {static} float4x4_operator_equal_wide_wide() : void
    + {static} float4x4_operator_equal_wide_scalar() : void
    + {static} float4x4_operator_equal_scalar_wide() : void
    + {static} float4x4_operator_not_equal_wide_wide() : void
    + {static} float4x4_operator_not_equal_wide_scalar() : void
    + {static} float4x4_operator_not_equal_scalar_wide() : void
    + {static} float4x4_operator_less_wide_wide() : void
    + {static} float4x4_operator_less_wide_scalar() : void
    + {static} float4x4_operator_less_scalar_wide() : void
    + {static} float4x4_operator_greater_wide_wide() : void
    + {static} float4x4_operator_greater_wide_scalar() : void
    + {static} float4x4_operator_greater_scalar_wide() : void
    + {static} float4x4_operator_less_equal_wide_wide() : void
    + {static} float4x4_operator_less_equal_wide_scalar() : void
    + {static} float4x4_operator_less_equal_scalar_wide() : void
    + {static} float4x4_operator_greater_equal_wide_wide() : void
    + {static} float4x4_operator_greater_equal_wide_scalar() : void
    + {static} float4x4_operator_greater_equal_scalar_wide() : void
    + {static} float4x4_operator_add_wide_wide() : void
    + {static} float4x4_operator_add_wide_scalar() : void
    + {static} float4x4_operator_add_scalar_wide() : void
    + {static} float4x4_operator_sub_wide_wide() : void
    + {static} float4x4_operator_sub_wide_scalar() : void
    + {static} float4x4_operator_sub_scalar_wide() : void
    + {static} float4x4_operator_mul_wide_wide() : void
    + {static} float4x4_operator_mul_wide_scalar() : void
    + {static} float4x4_operator_mul_scalar_wide() : void
    + {static} float4x4_operator_div_wide_wide() : void
    + {static} float4x4_operator_div_wide_scalar() : void
    + {static} float4x4_operator_div_scalar_wide() : void
    + {static} float4x4_operator_mod_wide_wide() : void
    + {static} float4x4_operator_mod_wide_scalar() : void
    + {static} float4x4_operator_mod_scalar_wide() : void
    + {static} float4x4_operator_plus() : void
    + {static} float4x4_operator_neg() : void
    + {static} float4x4_operator_prefix_inc() : void
    + {static} float4x4_operator_postfix_inc() : void
    + {static} float4x4_operator_prefix_dec() : void
    + {static} float4x4_operator_postfix_dec() : void
    + {static} float4x4_EqualsObjectOverride() : void
}
@enduml
