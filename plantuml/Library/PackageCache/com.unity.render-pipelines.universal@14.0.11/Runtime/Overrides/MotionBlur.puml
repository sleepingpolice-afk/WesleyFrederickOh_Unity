@startuml
enum MotionBlurMode {
    CameraOnly,
    CameraAndObjects,
}
enum MotionBlurQuality {
    Low,
    Medium,
    High,
}
class MotionBlur <<sealed>> {
    + IsActive() : bool
    + IsTileCompatible() : bool
}
class MotionBlurModeParameter <<sealed>> {
    + MotionBlurModeParameter(value:MotionBlurMode, overrideState:bool)
}
class MotionBlurQualityParameter <<sealed>> {
    + MotionBlurQualityParameter(value:MotionBlurQuality, overrideState:bool)
}
class "VolumeParameter`1"<T> {
}
VolumeComponent <|-- MotionBlur
IPostProcessComponent <|-- MotionBlur
MotionBlur o-> "mode" MotionBlurModeParameter
MotionBlur o-> "quality" MotionBlurQualityParameter
MotionBlur o-> "intensity" ClampedFloatParameter
MotionBlur o-> "clamp" ClampedFloatParameter
"VolumeParameter`1" "<MotionBlurMode>" <|-- MotionBlurModeParameter
"VolumeParameter`1" "<MotionBlurQuality>" <|-- MotionBlurQualityParameter
@enduml
